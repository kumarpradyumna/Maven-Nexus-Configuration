/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.82
 * Generated at: 2018-01-20 11:00:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.jsp2.jspattribute;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class jspattribute_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/WEB-INF/jsp2/jsp2-example-taglib.tld", Long.valueOf(1506688041000L));
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("  <head>\n");
      out.write("    <title>JSP 2.0 Examples - jsp:attribute and jsp:body</title>\n");
      out.write("  </head>\n");
      out.write("  <body>\n");
      out.write("    <h1>JSP 2.0 Examples - jsp:attribute and jsp:body</h1>\n");
      out.write("    <hr>\n");
      out.write("    <p>The new &lt;jsp:attribute&gt; and &lt;jsp:body&gt;\n");
      out.write("    standard actions can be used to specify the value of any standard\n");
      out.write("    action or custom action attribute.</p>\n");
      out.write("    <p>This example uses the &lt;jsp:attribute&gt;\n");
      out.write("    standard action to use the output of a custom action invocation\n");
      out.write("    (one that simply outputs \"Hello, World!\") to set the value of a\n");
      out.write("    bean property.  This would normally require an intermediary\n");
      out.write("    step, such as using JSTL's &lt;c:set&gt; action.</p>\n");
      out.write("    <br>\n");
      out.write("    ");
      jsp2.examples.FooBean foo = null;
      foo = (jsp2.examples.FooBean) _jspx_page_context.getAttribute("foo", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (foo == null){
        foo = new jsp2.examples.FooBean();
        _jspx_page_context.setAttribute("foo", foo, javax.servlet.jsp.PageContext.PAGE_SCOPE);
        out.write("\n");
        out.write("      Bean created!  Setting foo.bar...<br>\n");
        out.write("      ");
        out = _jspx_page_context.pushBody();
        //  my:helloWorld
        jsp2.examples.simpletag.HelloWorldSimpleTag _jspx_th_my_005fhelloWorld_005f0 = new jsp2.examples.simpletag.HelloWorldSimpleTag();
        _jsp_getInstanceManager().newInstance(_jspx_th_my_005fhelloWorld_005f0);
        try {
          _jspx_th_my_005fhelloWorld_005f0.setJspContext(_jspx_page_context);
          _jspx_th_my_005fhelloWorld_005f0.doTag();
        } finally {
          _jsp_getInstanceManager().destroyInstance(_jspx_th_my_005fhelloWorld_005f0);
        }
        java.lang.String _jspx_temp0 = ((javax.servlet.jsp.tagext.BodyContent)out).getString();
        out = _jspx_page_context.popBody();
        org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("foo"), "bar", _jspx_temp0, null, null, false);
        out.write("\n");
        out.write("    ");
      }
      out.write("\n");
      out.write("    <br>\n");
      out.write("    Result: ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${foo.bar}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\n");
      out.write("  </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
